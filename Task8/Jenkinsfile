pipeline {
    agent any

    tools {
        maven 'MAVEN_HOME' // Ensure Jenkins has Maven configured with this name
    }

    environment {
        POM_PATH = 'Task8/pom.xml' // Path to the parent POM file
        SONAR_HOST_URL = 'http://localhost:9000' // Change this to match your SonarQube URL
    }

    stages {
        stage('Checkout') {
            steps {
                git branch: 'main', url: 'https://github.com/Abdurahman252/Task8.git'
            }
        }

        stage('SonarQube Analysis') {
            steps {
                script {
                    echo "Running SonarQube analysis..."

                    // Securely retrieve SonarQube credentials
                    withSonarQubeEnv('SonarQube') {
                        withCredentials([string(credentialsId: 'sonar-token-id', variable: 'SONAR_TOKEN')]) {
                            bat """
                                mvn -f ${POM_PATH} sonar:sonar ^
                                    -Dsonar.projectKey=Task8a ^
                                    -Dsonar.host.url=${SONAR_HOST_URL} ^
                                   -Dsonar.login=sqp_ef7918d3fb6011f2222b9bbbf2c11b331a60588a
                            """
                        }
                    }
                }
            }
        }

        stage('Quality Gate') {
            steps {
                script {
                    echo "Waiting for SonarQube Quality Gate..."
                    timeout(time: 2, unit: 'MINUTES') {
                        waitForQualityGate abortPipeline: true
                    }
                }
            }
        }

        stage('Test') {
            steps {
                script {
                    echo "Running unit tests..."
                    bat "mvn -f ${POM_PATH} test"
                }
            }
        }

        stage('Package') {
            steps {
                script {
                    echo "Packaging application..."
                    bat "mvn -f ${POM_PATH} package"
                }
            }
        }

        stage('Deploy') {
            steps {
                echo "Deployment stage (modify as needed)..."
            }
        }
    }

    post {
        success {
            echo "Pipeline executed successfully! ✅"
        }
        failure {
            echo "Pipeline failed! ❌ Check the logs."
        }
    }
}
